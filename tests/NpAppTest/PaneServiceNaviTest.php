<?php
namespace NpAppTest\View\Pane\Service;

use Flower\View\Pane\PaneEvent;
use NpAppTest\Bootstrap;
use Zend\View\Renderer\PhpRenderer;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-02-06 at 23:02:41.
 */
class ManagerFactoryIntegrationTest extends \PHPUnit_Framework_TestCase
{
    protected $serviceLocator;

    protected $paneCacheStorage;

    protected $renderCacheStorage;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->serviceLocator = Bootstrap::getServiceManager();
        $this->serviceLocator->get('Application')->bootstrap();
        $this->view = $this->serviceLocator->get('ViewManager')->getRenderer();
        $this->manager = $this->view->plugin('npPaneManager');
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        //$this->manager->refresh('navi/naviContainer');
        //$this->manager->refresh('navi/naviColumn');
        //$this->manager->refresh('navi/navbar');
    }

    public function testPaneNaviContainer()
    {
        $pane = $this->manager->get('navi/naviContainer');
        $array = array(
            array(
                'label' => 'foo',
                'href' => 'foo',
                'collection' => array(
                    array('label' => 'foo',
                    'href' => '#foo',),
                ),
            ),
            array(
                'label' => 'bar',
                'href' => '#bar',
                'collection' => array(
                    array('label' => 'bar/foo',
                    'href' => '#bar/foo',),
                ),
            ),
            array('label' => 'baz', 'href' => 'baz'),
        );
        $collection = new \RecursiveArrayIterator($array);
        $pane->setCollection($collection);
        $expects = str_replace("\r\n", "\n", ''
                . ''
);
        echo $res = $this->manager->renderPane($pane);
        $this->assertEquals($expects, $res);
    }
}
