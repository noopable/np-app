<?php
namespace NpAppTest\View\Pane\Service;

use Flower\View\Pane\PaneEvent;
use NpAppTest\Bootstrap;
use Zend\View\Renderer\PhpRenderer;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-02-06 at 23:02:41.
 */
class ManagerFactoryIntegrationTest extends \PHPUnit_Framework_TestCase
{
    protected $serviceLocator;

    protected $paneCacheStorage;

    protected $renderCacheStorage;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->serviceLocator = Bootstrap::getServiceManager();
        $this->serviceLocator->get('Application')->bootstrap();
        $this->view = $this->serviceLocator->get('ViewManager')->getRenderer();
        $this->manager = $this->view->plugin('npPaneManager');
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        $config = $this->serviceLocator->get('Config');
        if (isset($config['flower_pane_manager']['listener_aggregates'])) {
            if (in_array('PaneFileListener', $config['flower_pane_manager']['listener_aggregates'])) {
                $fileListener = $this->serviceLocator->get('PaneFileListener');
                $fileListener->getFileService()->refresh();
            }
        }
        $this->manager->refresh('foo');
        $this->manager->refresh('bar');
    }

    public function testCanGetPaneManager()
    {
        $this->assertInstanceOf('Flower\View\Pane\PaneManager', $this->manager);
    }

    public function testCanGetPaneInConfig()
    {
        $pane = $this->manager->get('bar');
        $this->assertInstanceOf('Flower\View\Pane\PaneClass\PaneInterface', $pane);
        $res = $this->manager->render('bar');
        $expected = '<!-- begin Renderer -->
<div>
</div>
<!-- end Renderer -->
';
        $this->assertEquals(str_replace("\r\n", "\n", $expected), $res);
    }

    public function testCanGetPaneInFile()
    {
        $pane = $this->manager->get('foo');
        $this->assertInstanceOf('Flower\View\Pane\PaneClass\PaneInterface', $pane);
        $res = $this->manager->render('foo');
        $expected = '<!-- begin Renderer -->
<div>
</div>
<!-- end Renderer -->
';
        $this->assertEquals(str_replace("\r\n", "\n", $expected), $res);
    }

    public function testEventListnerIsAttached()
    {
        $eventManager = $this->manager->getEventManager();
        $listeners = $eventManager->getListeners(PaneEvent::EVENT_GET_PANE);
        $this->assertEquals(3, $listeners->count());
    }
}
